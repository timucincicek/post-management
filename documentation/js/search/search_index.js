var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.305,1,1.305]],["body/injectables/ApiService.html",[0,1.969,1,1.969,2,2.102,3,0.737,4,0.737,5,0.52,6,2.52,7,0.425,8,2.687,9,3.741,10,4.032,11,3.55,12,1.155,13,3.155,14,3.741,15,1.627,16,3.155,17,1.333,18,0.057,19,0.999,20,0.52,21,1.333,22,4.032,23,3.155,24,2.102,25,3.155,26,3.155,27,1.321,28,0.999,29,1.79,30,3.155,31,3.155,32,0.253,33,3.155,34,2.52,35,1.333,36,3.155,37,2.52,38,0.737,39,1.155,40,1.54,41,1.155,42,2.102,43,2.287,44,3.155,45,3.155,46,0.042,47,0.042]],["title/components/AppComponent.html",[48,0.441,49,0.978]],["body/components/AppComponent.html",[3,0.592,4,0.592,5,0.418,7,0.341,12,0.927,15,1.276,17,1.07,18,0.057,19,1.262,20,0.575,21,1.07,27,1.345,28,0.802,32,0.203,35,1.07,37,2.784,38,0.592,39,0.927,40,1.237,41,0.927,46,0.037,47,0.037,48,0.657,49,1.571,50,1.276,51,1.237,52,1.237,53,2.023,54,1.237,55,2.327,56,2.013,57,1.472,58,1.276,59,1.977,60,1.571,61,1.571,62,1.571,63,2.261,64,2.655,65,1.472,66,0.689,67,1.36,68,1.437,69,1.703,70,3.485,71,2.261,72,1.437,73,0.927,74,2.533,75,2.533,76,1.688,77,2.533,78,2.533,79,1.688,80,2.533,81,0.592,82,2.023,83,1.437,84,2.533,85,2.533,86,2.533,87,1.237,88,1.472,89,1.702,90,1.237,91,2.096,92,1.237,93,1.237,94,1.237,95,1.237,96,0.927,97,1.237,98,1.07,99,1.07,100,1.237]],["title/injectables/Effects.html",[0,1.305,101,1.516]],["body/injectables/Effects.html",[0,1.317,1,2.088,2,1.185,3,0.415,4,0.415,5,0.293,7,0.526,12,0.988,15,1.193,17,0.751,18,0.058,19,0.563,20,0.293,21,0.751,27,1.276,28,0.563,32,0.143,35,0.751,38,0.415,39,0.651,41,1.332,43,2.335,46,0.028,47,0.028,58,0.988,66,0.645,69,1.566,73,0.651,81,0.415,82,1.42,101,1.53,102,1.42,103,2.603,104,2.603,105,1.778,106,3.417,107,2.424,108,3.638,109,1.778,110,1.53,111,2.689,112,3.124,113,3.638,114,2.697,115,2.697,116,2.697,117,2.424,118,3.638,119,2.697,120,2.335,121,2.697,122,1.797,123,2.697,124,2.697,125,2.697,126,2.906,127,2.697,128,2.697,129,2.424,130,1.778,131,2.697,132,3.124,133,3.638,134,2.603,135,2.697,136,2.697,137,2.155,138,2.906,139,2.697,140,2.155,141,2.697,142,2.155,143,2.155,144,1.849,145,2.603,146,2.697,147,2.155,148,2.155,149,2.697,150,2.697,151,2.697,152,2.697,153,1.778,154,1.778,155,1.185,156,1.185,157,1.42,158,1.42,159,0.868,160,1.778,161,1.778,162,1.778,163,0.868,164,0.868,165,1.009,166,1.009,167,1.009,168,1.185,169,1.42,170,3.638]],["title/interfaces/ExtendedPost.html",[171,0.847,172,0.73]],["body/interfaces/ExtendedPost.html",[3,0.847,4,0.847,5,0.598,7,0.662,18,0.055,20,0.725,27,0.99,32,0.395,38,0.847,46,0.046,47,0.046,66,0.87,120,2.792,171,1.149,172,1.201,173,1.771,174,1.771,175,2.897,176,3.513,177,4.027,178,3.626]],["title/components/HeaderComponent.html",[48,0.441,60,0.978]],["body/components/HeaderComponent.html",[3,0.596,4,0.596,5,0.421,7,0.343,12,0.934,15,1.282,17,1.078,18,0.057,19,1.267,20,0.578,21,1.078,27,1.303,28,0.808,32,0.39,35,1.078,38,0.596,39,0.934,40,1.245,41,0.934,46,0.037,47,0.037,48,0.66,49,0.934,50,1.282,51,1.245,52,1.245,54,1.245,55,2.331,56,2.017,57,1.479,58,1.282,59,1.987,60,1.576,61,0.934,62,0.934,63,2.269,64,2.665,65,1.479,66,0.693,67,0.808,68,1.447,69,1.707,71,2.269,72,1.447,73,0.934,81,0.596,87,1.245,88,1.479,89,1.71,90,1.245,91,2.102,92,1.245,93,1.245,94,1.245,95,1.245,96,0.934,97,1.245,98,1.078,99,1.078,100,1.245,172,0.696,174,1.245,179,2.037,180,2.797,181,3.195,182,3.195,183,3.502,184,3.999,185,3.502,186,1.699,187,1.699,188,2.037,189,2.551,190,2.551,191,1.245,192,2.551]],["title/components/LoadingSpinnerComponent.html",[48,0.441,62,0.978]],["body/components/LoadingSpinnerComponent.html",[3,0.562,4,0.562,5,0.397,18,0.056,19,1.065,27,0.918,28,0.762,32,0.193,34,3.096,38,0.562,39,0.88,46,0.035,47,0.035,48,0.639,49,0.88,50,1.231,51,1.174,52,1.174,54,1.174,55,2.294,56,1.985,57,1.42,58,1.231,60,0.88,61,0.88,62,1.537,65,1.42,67,1.45,76,1.602,87,1.174,88,1.42,89,1.641,90,1.174,91,2.049,92,1.174,93,1.174,94,1.174,95,1.174,96,0.88,97,1.174,98,1.016,99,1.016,100,1.174,122,1.602,193,1.364,194,1.921,195,1.921,196,2.685,197,2.24,198,3.876,199,1.921,200,3.876,201,3.876,202,3.362,203,3.362,204,3.362,205,3.362,206,2.685,207,2.404,208,2.596,209,2.404,210,1.921,211,1.921,212,3.362,213,2.404,214,2.404,215,2.685,216,2.404,217,3.353,218,1.364,219,1.921,220,3.362,221,3.362,222,1.921,223,3.362,224,3.096,225,2.404,226,2.404,227,4.197,228,2.404,229,2.404,230,2.404,231,2.404,232,2.404,233,3.876,234,3.876,235,2.404,236,2.404,237,2.404,238,2.404,239,2.404,240,2.404,241,2.404,242,3.362,243,2.404,244,1.602,245,2.404]],["title/interfaces/Post.html",[32,0.214,171,0.847]],["body/interfaces/Post.html",[3,0.822,4,0.822,5,0.581,7,0.474,18,0.055,20,0.803,32,0.346,38,0.822,42,3.39,46,0.045,47,0.045,66,0.854,171,1.115,173,1.719,177,4.065,191,2.379,246,2.813,247,2.764,248,2.764,249,2.764]],["title/components/PostComponent.html",[48,0.441,96,0.978]],["body/components/PostComponent.html",[3,0.564,4,0.564,5,0.398,7,0.325,8,2.247,12,0.884,15,1.54,17,1.02,18,0.056,19,1.231,20,0.556,21,1.02,24,1.609,27,1.251,28,0.765,32,0.377,38,0.564,39,0.884,40,1.179,41,1.54,46,0.035,47,0.035,48,0.641,49,0.884,50,1.235,51,1.179,52,1.179,54,1.179,55,2.297,56,1.987,57,1.425,58,1.235,60,0.884,61,0.884,62,0.884,65,1.425,66,0.768,67,0.765,68,1.37,69,1.678,73,0.884,81,0.564,87,1.179,88,1.425,89,1.647,90,1.179,91,2.053,92,1.179,93,1.179,94,1.179,95,1.179,96,1.54,97,1.179,98,1.02,99,1.02,100,1.179,110,1.37,111,1.913,159,2.238,163,1.179,172,1.061,174,1.179,186,1.609,193,1.37,197,2.247,206,1.929,218,1.37,219,1.929,244,1.609,250,1.929,251,3.885,252,3.885,253,4.205,254,3.372,255,3.372,256,2.415,257,2.415,258,1.929,259,2.694,260,1.609,261,1.929,262,2.415,263,2.415,264,2.415,265,2.415,266,2.415,267,2.415,268,2.415,269,2.415,270,2.415]],["title/components/PostListComponent.html",[48,0.441,61,0.978]],["body/components/PostListComponent.html",[3,0.516,4,0.516,5,0.364,7,0.297,8,2.11,12,0.809,15,1.355,17,0.934,18,0.057,19,1.173,20,0.522,21,0.934,24,1.472,27,1.323,28,0.7,32,0.368,35,0.934,38,0.516,39,0.809,40,1.079,41,0.809,46,0.033,47,0.033,48,0.61,49,0.809,50,1.159,51,1.079,52,1.079,54,1.079,55,2.239,56,1.937,57,1.338,58,1.159,59,1.797,60,0.809,61,1.48,62,0.809,63,2.1,64,2.466,65,1.564,66,0.626,67,0.7,68,1.254,69,1.63,71,2.1,72,1.254,73,0.809,79,2.693,81,0.516,87,1.079,88,1.338,89,1.546,90,1.079,91,1.974,92,1.079,93,1.079,94,1.079,95,1.079,96,1.48,97,1.079,98,1.564,99,0.934,100,1.079,140,1.765,164,1.079,172,0.603,174,1.079,186,1.472,188,1.765,193,1.254,197,2.11,199,1.765,217,1.765,218,1.254,222,1.765,224,2.956,258,2.53,261,1.765,271,3.229,272,1.765,273,3.167,274,3.701,275,3.701,276,3.701,277,2.956,278,3.229,279,3.167,280,2.21,281,1.472,282,2.21,283,2.21,284,2.21,285,2.21,286,3.229,287,2.21,288,2.21,289,2.21,290,2.21,291,1.765,292,2.21,293,3.167,294,2.21]],["title/interfaces/StoreDTO.html",[81,0.624,171,0.847]],["body/interfaces/StoreDTO.html",[3,0.812,4,0.812,5,0.573,7,0.468,18,0.055,20,0.8,27,0.949,32,0.279,38,0.812,46,0.045,47,0.045,66,0.847,67,1.472,81,1.001,117,3.231,171,1.101,172,1.429,173,1.697,295,2.777,296,4.646,297,3.874,298,4.285,299,2.777,300,3.476,301,3.476]],["title/coverage.html",[302,2.888]],["body/coverage.html",[0,1.602,1,1.134,5,0.383,6,1.855,18,0.056,20,0.383,29,1.318,32,0.263,46,0.034,47,0.034,48,0.719,49,0.85,53,1.855,60,0.85,61,0.85,62,0.85,76,1.548,79,1.548,81,0.543,83,1.318,96,0.85,101,1.318,102,1.855,144,1.318,159,1.134,163,1.134,164,1.134,165,1.318,166,1.318,167,1.318,168,1.548,171,1.205,172,0.634,174,1.134,175,1.855,179,1.855,187,1.548,194,1.855,195,1.855,208,3.036,246,1.855,250,1.855,260,1.548,271,1.855,272,1.855,281,1.548,295,1.855,302,1.855,303,2.323,304,2.323,305,2.323,306,4.134,307,5.264,308,3.281,309,3.804,310,1.855,311,4.194,312,3.615,313,3.795,314,1.548,315,1.548,316,1.548,317,1.548,318,1.548,319,1.548,320,1.548,321,1.548,322,3.302,323,2.621,324,1.855,325,1.855,326,1.548,327,1.855,328,1.855,329,1.855,330,2.323,331,2.323]],["title/dependencies.html",[332,1.795,333,2.136]],["body/dependencies.html",[18,0.057,28,1.101,35,1.469,46,0.045,47,0.045,72,1.972,73,1.273,107,2.316,155,2.316,156,2.316,333,2.316,334,3.476,335,5.192,336,3.476,337,3.476,338,4.285,339,4.285,340,3.476,341,3.476,342,3.423,343,2.777,344,2.777,345,2.777,346,2.777,347,3.476,348,2.777,349,3.476,350,3.476,351,3.476,352,3.476,353,3.476]],["title/miscellaneous/enumerations.html",[354,1.275,355,2.56]],["body/miscellaneous/enumerations.html",[7,0.542,18,0.049,32,0.375,46,0.049,47,0.049,191,1.966,247,2.285,248,2.285,249,2.285,354,2.285,355,3.217,356,3.217,357,4.027]],["title/index.html",[7,0.303,358,2.247,359,2.247]],["body/index.html",[1,1.005,5,0.258,7,0.371,9,0.727,11,0.727,12,0.333,14,0.727,15,0.333,18,0.022,19,0.496,20,0.258,29,0.888,32,0.386,41,0.333,42,0.606,43,0.888,46,0.016,47,0.022,48,0.645,50,1.245,56,1.437,57,0.384,58,0.333,59,0.888,63,0.516,65,0.661,66,0.483,67,1.077,69,1.245,71,1.827,73,0.333,81,0.213,83,0.516,88,0.384,98,1.652,99,0.384,101,1.563,103,1.25,104,1.25,106,2.573,107,1.372,110,1.168,111,1.168,112,0.727,117,1.043,120,1.707,129,0.606,132,1.25,134,0.727,138,1.25,142,1.25,143,1.25,144,1.168,145,0.727,147,1.953,148,3.377,155,0.606,156,0.606,157,0.727,158,0.727,159,0.444,163,1.005,164,1.005,165,1.168,166,1.168,167,1.168,169,0.727,171,0.496,172,0.821,173,0.444,176,0.727,180,1.25,181,2.717,182,1.953,191,0.764,193,0.516,196,1.645,208,0.516,210,0.727,211,0.727,215,2.2,218,0.516,244,1.372,247,0.516,248,1.563,249,0.516,259,0.727,277,0.727,278,0.727,286,1.953,291,0.727,297,0.727,299,1.25,311,0.727,314,0.606,315,0.606,316,0.606,317,0.606,318,1.372,319,1.043,320,0.606,321,0.606,326,0.606,329,1.25,333,0.606,342,0.727,343,1.25,344,0.727,345,0.727,346,0.727,348,0.727,360,0.91,361,2.445,362,1.565,363,2.059,364,3.556,365,1.565,366,2.445,367,1.565,368,0.91,369,3.556,370,1.565,371,0.91,372,3.911,373,2.059,374,2.059,375,2.755,376,3.556,377,0.91,378,0.91,379,2.059,380,2.059,381,0.91,382,0.91,383,1.565,384,0.91,385,0.91,386,0.91,387,1.565,388,1.565,389,0.91,390,2.059,391,3.124,392,0.91,393,3.556,394,0.91,395,0.91,396,0.91,397,0.91,398,1.565,399,0.91,400,0.91,401,2.755,402,1.565,403,1.565,404,2.755,405,2.445,406,2.445,407,2.059,408,1.565,409,0.91,410,0.91,411,1.565,412,4.345,413,0.91,414,0.91,415,3.221,416,0.91,417,0.91,418,0.91,419,1.565,420,0.91,421,1.565,422,0.91,423,1.565,424,0.91,425,0.91,426,0.91,427,0.91,428,0.91,429,1.565,430,1.565,431,0.91,432,0.91,433,0.91,434,0.91,435,0.91,436,0.91,437,1.565,438,1.565,439,0.91,440,2.059,441,0.91,442,0.91,443,0.91,444,0.91,445,0.91,446,1.565,447,0.91,448,1.565,449,4.397,450,0.91,451,0.91,452,0.91,453,1.565,454,0.91,455,0.91,456,0.91,457,2.445,458,0.91,459,0.91,460,2.059,461,0.91,462,0.91,463,0.91,464,0.91,465,1.565,466,0.91,467,1.565,468,0.91,469,2.059,470,0.91,471,2.059,472,1.565,473,0.91,474,1.565,475,0.91,476,1.565,477,0.91,478,0.91,479,0.91,480,0.91,481,3.009,482,0.91,483,3.401,484,0.91,485,0.91,486,1.565,487,0.91,488,1.565,489,0.91,490,0.91,491,0.91,492,0.91,493,0.91,494,1.565,495,1.565,496,0.91,497,0.91,498,0.91,499,0.91,500,0.91,501,0.91,502,0.91,503,0.91,504,0.91,505,0.91,506,0.91,507,0.91,508,2.445,509,0.91,510,1.565,511,3.221,512,0.91,513,0.91,514,0.91,515,1.565,516,0.91,517,0.91,518,0.91,519,0.91,520,0.91,521,0.91,522,0.91,523,2.059,524,0.91,525,0.91,526,3.911,527,2.717,528,1.565,529,1.565,530,2.445,531,1.565,532,0.91,533,1.565,534,1.565,535,1.565,536,0.91,537,0.91,538,0.91,539,2.059,540,2.445,541,0.91,542,2.403,543,1.565,544,2.445,545,0.91,546,0.91,547,1.565,548,1.565,549,2.059,550,1.565,551,2.445,552,0.91,553,0.91,554,2.445,555,1.565,556,1.565,557,2.445,558,0.91,559,0.91,560,1.565,561,0.91,562,1.565,563,0.91,564,0.91,565,0.91,566,0.91,567,1.565,568,0.91,569,2.059,570,0.91,571,0.91,572,0.91,573,2.059,574,0.91,575,0.91,576,0.91,577,0.91,578,0.91,579,0.91,580,0.91,581,0.91,582,0.91,583,1.565,584,0.91,585,2.445,586,0.91,587,1.043,588,0.91,589,0.91,590,0.91,591,0.91,592,0.91,593,1.565,594,0.91,595,0.91,596,1.565,597,0.91,598,0.91,599,0.91,600,0.91,601,0.91,602,0.91,603,0.91,604,0.727,605,1.565,606,0.727,607,0.91,608,0.91,609,0.91,610,0.727,611,0.727,612,1.565,613,0.91,614,0.91,615,0.91,616,0.91,617,1.565,618,1.565,619,0.91,620,0.91,621,0.91,622,1.565,623,0.91,624,0.91,625,0.91,626,0.91,627,1.565,628,0.91,629,0.91,630,0.91,631,0.91,632,0.91,633,0.91,634,2.755,635,0.91,636,1.565,637,2.445,638,2.059,639,0.91,640,0.91,641,0.91,642,0.91,643,0.91,644,0.91,645,2.059,646,2.059,647,0.91,648,0.91,649,0.91,650,0.91,651,1.565,652,0.91,653,0.91,654,0.91,655,1.565,656,0.91,657,1.565,658,0.91,659,0.91,660,0.91,661,2.445,662,1.565,663,0.91,664,0.91,665,0.91,666,0.91,667,0.91,668,0.91,669,0.91,670,0.91,671,0.91,672,0.91,673,0.91,674,0.91,675,0.91,676,2.059,677,0.91,678,0.91,679,0.91,680,0.91,681,0.91,682,0.727,683,0.91,684,0.91,685,0.91,686,0.91,687,0.91,688,0.91,689,0.91]],["title/modules.html",[690,2.888]],["body/modules.html",[18,0.05,46,0.05,47,0.05,690,3.34]],["title/overview.html",[691,2.888]],["body/overview.html",[2,2.724,18,0.05,46,0.05,47,0.05,50,1.497,173,1.996,682,3.265,691,3.265,692,4.088,693,4.088]],["title/properties.html",[66,0.634,332,1.795]],["body/properties.html",[18,0.053,46,0.05,47,0.05,66,0.818,606,3.302,694,4.134]],["title/miscellaneous/variables.html",[354,1.275,587,2.136]],["body/miscellaneous/variables.html",[7,0.395,18,0.057,20,0.708,29,1.666,32,0.28,43,1.13,46,0.031,47,0.031,67,0.631,69,1.409,81,0.899,83,1.666,110,2.929,111,2.929,120,1.13,122,1.327,126,1.591,129,1.957,137,1.591,144,1.979,159,1.434,163,1.703,164,1.703,165,1.979,166,1.979,167,1.979,168,1.957,172,0.952,187,1.957,191,0.973,208,1.13,247,1.666,248,1.666,249,1.13,260,1.327,281,1.957,310,2.346,312,1.591,313,1.591,314,1.957,315,2.324,316,1.957,317,2.324,318,1.957,319,2.324,320,1.957,321,2.324,322,1.591,323,2.346,324,1.591,325,2.346,326,2.959,327,1.591,328,1.591,354,1.13,356,1.591,391,2.346,527,3.279,542,2.346,587,1.327,604,1.591,610,3.075,611,3.431,695,4.558,696,2.937,697,1.992,698,4.295,699,3.85,700,1.992,701,3.85,702,4.105,703,2.937,704,1.992,705,1.992,706,2.937,707,1.992,708,1.992,709,1.992,710,1.992,711,1.992,712,1.992,713,1.992,714,4.105,715,1.992,716,2.937,717,1.992,718,1.992,719,1.992,720,1.992]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":208,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":694,"title":{},"body":{"properties.html":{}}}],["0.14.4",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":240,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.3s",{"_index":238,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.45s",{"_index":236,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.5",{"_index":231,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["0.9.2",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":122,"title":{},"body":{"injectables/Effects.html":{},"components/LoadingSpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["1.2s",{"_index":228,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["10",{"_index":366,"title":{},"body":{"index.html":{}}}],["100",{"_index":244,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"index.html":{}}}],["10px",{"_index":265,"title":{},"body":{"components/PostComponent.html":{}}}],["12",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12px",{"_index":268,"title":{},"body":{"components/PostComponent.html":{}}}],["17",{"_index":409,"title":{},"body":{"index.html":{}}}],["17.2.0",{"_index":342,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.3.6",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["18.0.0",{"_index":348,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1fr",{"_index":290,"title":{},"body":{"components/PostListComponent.html":{}}}],["1px",{"_index":294,"title":{},"body":{"components/PostListComponent.html":{}}}],["2",{"_index":693,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":682,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4",{"_index":612,"title":{},"body":{"index.html":{}}}],["5",{"_index":692,"title":{},"body":{"overview.html":{}}}],["5.3.3",{"_index":344,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["50",{"_index":226,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["51px",{"_index":220,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["64px",{"_index":205,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["6px",{"_index":221,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["7.5.0",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_colors.scss",{"_index":588,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":203,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["access",{"_index":548,"title":{},"body":{"index.html":{}}}],["accessed",{"_index":605,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{}}}],["action",{"_index":527,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["action.value",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions",{"_index":106,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["activated",{"_index":648,"title":{},"body":{"index.html":{}}}],["active",{"_index":182,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["actively",{"_index":647,"title":{},"body":{"index.html":{}}}],["activepost",{"_index":296,"title":{},"body":{"interfaces/StoreDTO.html":{}}}],["activepost:extendedpost",{"_index":300,"title":{},"body":{"interfaces/StoreDTO.html":{}}}],["activepostreducer",{"_index":314,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["activepoststate",{"_index":315,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["activeproperty",{"_index":635,"title":{},"body":{"index.html":{}}}],["activestate",{"_index":120,"title":{},"body":{"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["activity",{"_index":523,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["added",{"_index":430,"title":{},"body":{"index.html":{}}}],["additional",{"_index":571,"title":{},"body":{"index.html":{}}}],["adhere",{"_index":628,"title":{},"body":{"index.html":{}}}],["again",{"_index":151,"title":{},"body":{"injectables/Effects.html":{}}}],["already",{"_index":428,"title":{},"body":{"index.html":{}}}],["always",{"_index":551,"title":{},"body":{"index.html":{}}}],["angular",{"_index":406,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["angular/compiler",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":227,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["another",{"_index":377,"title":{},"body":{"index.html":{}}}],["apart",{"_index":452,"title":{},"body":{"index.html":{}}}],["api",{"_index":364,"title":{},"body":{"index.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/Effects.html":{},"coverage.html":{},"index.html":{}}}],["apiurl",{"_index":604,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["appcomponent",{"_index":49,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"coverage.html":{}}}],["appears",{"_index":512,"title":{},"body":{"index.html":{}}}],["application",{"_index":361,"title":{},"body":{"index.html":{}}}],["applied",{"_index":675,"title":{},"body":{"index.html":{}}}],["approach",{"_index":383,"title":{},"body":{"index.html":{}}}],["approaches",{"_index":397,"title":{},"body":{"index.html":{}}}],["array",{"_index":544,"title":{},"body":{"index.html":{}}}],["arrayofpostproperties",{"_index":159,"title":{},"body":{"injectables/Effects.html":{},"components/PostComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["arrayofpostproperties.length",{"_index":123,"title":{},"body":{"injectables/Effects.html":{}}}],["arrays",{"_index":568,"title":{},"body":{"index.html":{}}}],["assign",{"_index":566,"title":{},"body":{"index.html":{}}}],["assignments",{"_index":503,"title":{},"body":{"index.html":{}}}],["assuming",{"_index":425,"title":{},"body":{"index.html":{}}}],["asyncpipe",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["attached",{"_index":481,"title":{},"body":{"index.html":{}}}],["attempted",{"_index":378,"title":{},"body":{"index.html":{}}}],["auto",{"_index":213,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["avoid",{"_index":457,"title":{},"body":{"index.html":{}}}],["avoiding",{"_index":475,"title":{},"body":{"index.html":{}}}],["back",{"_index":382,"title":{},"body":{"index.html":{}}}],["background",{"_index":291,"title":{},"body":{"components/PostListComponent.html":{},"index.html":{}}}],["based",{"_index":408,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{},"index.html":{}}}],["basically",{"_index":677,"title":{},"body":{"index.html":{}}}],["being",{"_index":686,"title":{},"body":{"index.html":{}}}],["below",{"_index":431,"title":{},"body":{"index.html":{}}}],["best",{"_index":410,"title":{},"body":{"index.html":{}}}],["bezier(0.5",{"_index":230,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["bigger",{"_index":590,"title":{},"body":{"index.html":{}}}],["black",{"_index":507,"title":{},"body":{"index.html":{}}}],["block",{"_index":219,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{}}}],["body",{"_index":247,"title":{},"body":{"interfaces/Post.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":298,"title":{},"body":{"interfaces/StoreDTO.html":{}}}],["bootstrap",{"_index":343,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["border",{"_index":217,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/PostListComponent.html":{}}}],["bottom",{"_index":209,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["box",{"_index":215,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"index.html":{}}}],["boxes",{"_index":368,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":666,"title":{},"body":{"index.html":{}}}],["browser",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["built",{"_index":462,"title":{},"body":{"index.html":{}}}],["calculated",{"_index":679,"title":{},"body":{"index.html":{}}}],["called",{"_index":545,"title":{},"body":{"index.html":{}}}],["calling",{"_index":659,"title":{},"body":{"index.html":{}}}],["case",{"_index":687,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":145,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["chains",{"_index":667,"title":{},"body":{"index.html":{}}}],["change",{"_index":676,"title":{},"body":{"index.html":{}}}],["changed",{"_index":380,"title":{},"body":{"index.html":{}}}],["changes",{"_index":374,"title":{},"body":{"index.html":{}}}],["checked",{"_index":685,"title":{},"body":{"index.html":{}}}],["child",{"_index":388,"title":{},"body":{"index.html":{}}}],["child(1",{"_index":235,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["child(2",{"_index":237,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["child(3",{"_index":239,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["choosing",{"_index":395,"title":{},"body":{"index.html":{}}}],["class",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["cli",{"_index":427,"title":{},"body":{"index.html":{}}}],["click",{"_index":540,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":511,"title":{},"body":{"index.html":{}}}],["clickedpost",{"_index":673,"title":{},"body":{"index.html":{}}}],["clicking",{"_index":373,"title":{},"body":{"index.html":{}}}],["clone",{"_index":621,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":416,"title":{},"body":{"index.html":{}}}],["clonedstate",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clonedstate[action.value.index",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codebase",{"_index":498,"title":{},"body":{"index.html":{}}}],["color",{"_index":224,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/PostListComponent.html":{}}}],["columns",{"_index":288,"title":{},"body":{"components/PostListComponent.html":{}}}],["combined",{"_index":586,"title":{},"body":{"index.html":{}}}],["common",{"_index":629,"title":{},"body":{"index.html":{}}}],["commonly",{"_index":411,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":465,"title":{},"body":{"index.html":{}}}],["compared",{"_index":672,"title":{},"body":{"index.html":{}}}],["completed",{"_index":654,"title":{},"body":{"index.html":{}}}],["component",{"_index":48,"title":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["components",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{},"overview.html":{}}}],["components/header/header.component",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["components/loading",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["components/post",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["condition",{"_index":688,"title":{},"body":{"index.html":{}}}],["conditionally",{"_index":513,"title":{},"body":{"index.html":{}}}],["const",{"_index":137,"title":{},"body":{"injectables/Effects.html":{},"miscellaneous/variables.html":{}}}],["constants/post",{"_index":160,"title":{},"body":{"injectables/Effects.html":{}}}],["constructed",{"_index":400,"title":{},"body":{"index.html":{}}}],["construction",{"_index":399,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["constructor(actions",{"_index":105,"title":{},"body":{"injectables/Effects.html":{}}}],["constructor(http",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["constructor(store",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["constructors",{"_index":501,"title":{},"body":{"index.html":{}}}],["consume",{"_index":473,"title":{},"body":{"index.html":{}}}],["container",{"_index":287,"title":{},"body":{"components/PostListComponent.html":{}}}],["convention",{"_index":630,"title":{},"body":{"index.html":{}}}],["correctly",{"_index":535,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":560,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":302,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":618,"title":{},"body":{"index.html":{}}}],["createaction",{"_index":611,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":589,"title":{},"body":{"index.html":{}}}],["createeffect",{"_index":112,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["createreducer",{"_index":610,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":456,"title":{},"body":{"index.html":{}}}],["crowding",{"_index":489,"title":{},"body":{"index.html":{}}}],["crucial",{"_index":619,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":229,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["currently",{"_index":510,"title":{},"body":{"index.html":{}}}],["currentpostaction.value",{"_index":119,"title":{},"body":{"injectables/Effects.html":{}}}],["currentpostaction.value.activestate",{"_index":121,"title":{},"body":{"injectables/Effects.html":{}}}],["currentpostaction.value.id",{"_index":124,"title":{},"body":{"injectables/Effects.html":{}}}],["cursor",{"_index":269,"title":{},"body":{"components/PostComponent.html":{}}}],["custom",{"_index":520,"title":{},"body":{"index.html":{}}}],["datasets",{"_index":599,"title":{},"body":{"index.html":{}}}],["date",{"_index":437,"title":{},"body":{"index.html":{}}}],["default",{"_index":110,"title":{},"body":{"injectables/Effects.html":{},"components/PostComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["defining",{"_index":632,"title":{},"body":{"index.html":{}}}],["definition",{"_index":572,"title":{},"body":{"index.html":{}}}],["delay",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{},"components/LoadingSpinnerComponent.html":{}}}],["dependencies",{"_index":333,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["destruction",{"_index":674,"title":{},"body":{"index.html":{}}}],["details",{"_index":392,"title":{},"body":{"index.html":{}}}],["directive",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["directives",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["directly",{"_index":633,"title":{},"body":{"index.html":{}}}],["directory",{"_index":565,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":128,"title":{},"body":{"injectables/Effects.html":{}}}],["dispatched",{"_index":526,"title":{},"body":{"index.html":{}}}],["dispatches",{"_index":541,"title":{},"body":{"index.html":{}}}],["display",{"_index":218,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["displayed",{"_index":375,"title":{},"body":{"index.html":{}}}],["displays",{"_index":365,"title":{},"body":{"index.html":{}}}],["div",{"_index":214,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["documentation",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["dollar",{"_index":625,"title":{},"body":{"index.html":{}}}],["dom",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["dummy",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicating",{"_index":575,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":369,"title":{},"body":{"index.html":{}}}],["effect",{"_index":644,"title":{},"body":{"index.html":{}}}],["effects",{"_index":101,"title":{"injectables/Effects.html":{}},"body":{"injectables/Effects.html":{},"coverage.html":{},"index.html":{}}}],["element",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["empty",{"_index":519,"title":{},"body":{"index.html":{}}}],["end",{"_index":627,"title":{},"body":{"index.html":{}}}],["ended",{"_index":668,"title":{},"body":{"index.html":{}}}],["enough",{"_index":417,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":499,"title":{},"body":{"index.html":{}}}],["entire",{"_index":577,"title":{},"body":{"index.html":{}}}],["enum",{"_index":547,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":355,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":555,"title":{},"body":{"index.html":{}}}],["enums/post",{"_index":161,"title":{},"body":{"injectables/Effects.html":{}}}],["environment",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment.ts",{"_index":603,"title":{},"body":{"index.html":{}}}],["error",{"_index":662,"title":{},"body":{"index.html":{}}}],["etc",{"_index":569,"title":{},"body":{"index.html":{}}}],["everything",{"_index":584,"title":{},"body":{"index.html":{}}}],["explained",{"_index":615,"title":{},"body":{"index.html":{}}}],["export",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{}}}],["exported",{"_index":556,"title":{},"body":{"index.html":{}}}],["extended",{"_index":299,"title":{},"body":{"interfaces/StoreDTO.html":{},"index.html":{}}}],["extendedpost",{"_index":172,"title":{"interfaces/ExtendedPost.html":{}},"body":{"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["extendedpostitems",{"_index":138,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["extendedpostlist",{"_index":297,"title":{},"body":{"interfaces/StoreDTO.html":{},"index.html":{}}}],["extendedpostlistreducer",{"_index":316,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["extendedpostliststate",{"_index":317,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":176,"title":{},"body":{"interfaces/ExtendedPost.html":{},"index.html":{}}}],["extensively",{"_index":496,"title":{},"body":{"index.html":{}}}],["extra",{"_index":479,"title":{},"body":{"index.html":{}}}],["extracted",{"_index":546,"title":{},"body":{"index.html":{}}}],["failed",{"_index":669,"title":{},"body":{"index.html":{}}}],["false",{"_index":129,"title":{},"body":{"injectables/Effects.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":147,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["fetched",{"_index":143,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["fetching",{"_index":570,"title":{},"body":{"index.html":{}}}],["fetchposts",{"_index":164,"title":{},"body":{"injectables/Effects.html":{},"components/PostListComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":602,"title":{},"body":{"index.html":{}}}],["find",{"_index":432,"title":{},"body":{"index.html":{}}}],["flow",{"_index":614,"title":{},"body":{"index.html":{}}}],["folder",{"_index":557,"title":{},"body":{"index.html":{}}}],["folders",{"_index":448,"title":{},"body":{"index.html":{}}}],["followed",{"_index":455,"title":{},"body":{"index.html":{}}}],["following",{"_index":370,"title":{},"body":{"index.html":{}}}],["font",{"_index":266,"title":{},"body":{"components/PostComponent.html":{}}}],["four",{"_index":450,"title":{},"body":{"index.html":{}}}],["function",{"_index":581,"title":{},"body":{"index.html":{}}}],["functional",{"_index":608,"title":{},"body":{"index.html":{}}}],["functions",{"_index":594,"title":{},"body":{"index.html":{}}}],["general",{"_index":453,"title":{},"body":{"index.html":{}}}],["generated",{"_index":451,"title":{},"body":{"index.html":{}}}],["getactivepost",{"_index":184,"title":{},"body":{"components/HeaderComponent.html":{}}}],["getbaseurl",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{}}}],["getextendedposts",{"_index":277,"title":{},"body":{"components/PostListComponent.html":{},"index.html":{}}}],["getposts",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"index.html":{}}}],["getter",{"_index":578,"title":{},"body":{"index.html":{}}}],["getting",{"_index":358,"title":{"index.html":{}},"body":{}}],["give",{"_index":521,"title":{},"body":{"index.html":{}}}],["gray",{"_index":293,"title":{},"body":{"components/PostListComponent.html":{}}}],["grid",{"_index":286,"title":{},"body":{"components/PostListComponent.html":{},"index.html":{}}}],["handling",{"_index":663,"title":{},"body":{"index.html":{}}}],["hardcoded",{"_index":509,"title":{},"body":{"index.html":{}}}],["header",{"_index":180,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["header'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["headercomponent",{"_index":60,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"coverage.html":{}}}],["height",{"_index":206,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{}}}],["help",{"_index":536,"title":{},"body":{"index.html":{}}}],["holding",{"_index":623,"title":{},"body":{"index.html":{}}}],["holds",{"_index":550,"title":{},"body":{"index.html":{}}}],["hook",{"_index":505,"title":{},"body":{"index.html":{}}}],["html",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["http",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclient",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{},"index.html":{}}}],["https://jsonplaceholder.typicode.com",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":191,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Post.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["id:&nbsp;{{lastpost.id",{"_index":183,"title":{},"body":{"components/HeaderComponent.html":{}}}],["idea",{"_index":522,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":449,"title":{},"body":{"index.html":{}}}],["immutability",{"_index":494,"title":{},"body":{"index.html":{}}}],["implements",{"_index":273,"title":{},"body":{"components/PostListComponent.html":{}}}],["import",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{}}}],["imported",{"_index":467,"title":{},"body":{"index.html":{}}}],["imports",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["inactive",{"_index":670,"title":{},"body":{"index.html":{}}}],["include",{"_index":624,"title":{},"body":{"index.html":{}}}],["included",{"_index":595,"title":{},"body":{"index.html":{}}}],["includes",{"_index":583,"title":{},"body":{"index.html":{}}}],["including",{"_index":469,"title":{},"body":{"index.html":{}}}],["incremented",{"_index":678,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["index:number",{"_index":178,"title":{},"body":{"interfaces/ExtendedPost.html":{}}}],["indexes",{"_index":561,"title":{},"body":{"index.html":{}}}],["indigo",{"_index":223,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["individually",{"_index":468,"title":{},"body":{"index.html":{}}}],["infinite",{"_index":232,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{}}}],["initialized",{"_index":439,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/Effects.html":{}},"body":{"injectables/ApiService.html":{},"injectables/Effects.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/Effects.html":{},"overview.html":{}}}],["injections",{"_index":490,"title":{},"body":{"index.html":{}}}],["input",{"_index":259,"title":{},"body":{"components/PostComponent.html":{},"index.html":{}}}],["inputs",{"_index":254,"title":{},"body":{"components/PostComponent.html":{}}}],["inside",{"_index":580,"title":{},"body":{"index.html":{}}}],["install",{"_index":419,"title":{},"body":{"index.html":{}}}],["installation",{"_index":414,"title":{},"body":{"index.html":{}}}],["installed",{"_index":429,"title":{},"body":{"index.html":{}}}],["instance",{"_index":387,"title":{},"body":{"index.html":{}}}],["instead",{"_index":464,"title":{},"body":{"index.html":{}}}],["interface",{"_index":171,"title":{"interfaces/ExtendedPost.html":{},"interfaces/Post.html":{},"interfaces/StoreDTO.html":{}},"body":{"interfaces/ExtendedPost.html":{},"interfaces/Post.html":{},"interfaces/StoreDTO.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":173,"title":{},"body":{"interfaces/ExtendedPost.html":{},"interfaces/Post.html":{},"interfaces/StoreDTO.html":{},"index.html":{},"overview.html":{}}}],["isnan(number(item",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["it's",{"_index":518,"title":{},"body":{"index.html":{}}}],["item",{"_index":140,"title":{},"body":{"injectables/Effects.html":{},"components/PostListComponent.html":{}}}],["jasmine",{"_index":345,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["jsonplaceholder",{"_index":363,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":241,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["keyword",{"_index":492,"title":{},"body":{"index.html":{}}}],["kind",{"_index":459,"title":{},"body":{"index.html":{}}}],["lastpost.id",{"_index":192,"title":{},"body":{"components/HeaderComponent.html":{}}}],["latest",{"_index":402,"title":{},"body":{"index.html":{}}}],["layout",{"_index":538,"title":{},"body":{"index.html":{}}}],["lds",{"_index":200,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["left",{"_index":211,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"index.html":{}}}],["legend",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["lifetime",{"_index":552,"title":{},"body":{"index.html":{}}}],["light",{"_index":292,"title":{},"body":{"components/PostListComponent.html":{}}}],["list",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["list.component",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["list.component.scss",{"_index":276,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts",{"_index":272,"title":{},"body":{"components/PostListComponent.html":{},"coverage.html":{}}}],["list.component.ts:27",{"_index":279,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.component.ts:33",{"_index":280,"title":{},"body":{"components/PostListComponent.html":{}}}],["list.ts",{"_index":325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["list/post",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/PostListComponent.html":{},"coverage.html":{}}}],["listed",{"_index":396,"title":{},"body":{"index.html":{}}}],["loading",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loading:boolean",{"_index":301,"title":{},"body":{"interfaces/StoreDTO.html":{}}}],["loadingreducer",{"_index":318,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loadingspinnercomponent",{"_index":62,"title":{"components/LoadingSpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"coverage.html":{}}}],["loadingstate",{"_index":319,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["look",{"_index":574,"title":{},"body":{"index.html":{}}}],["made",{"_index":491,"title":{},"body":{"index.html":{}}}],["main.ts",{"_index":613,"title":{},"body":{"index.html":{}}}],["mainly",{"_index":582,"title":{},"body":{"index.html":{}}}],["manage",{"_index":537,"title":{},"body":{"index.html":{}}}],["managed",{"_index":525,"title":{},"body":{"index.html":{}}}],["management",{"_index":181,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["manages",{"_index":539,"title":{},"body":{"index.html":{}}}],["manipulate",{"_index":641,"title":{},"body":{"index.html":{}}}],["manipulated",{"_index":637,"title":{},"body":{"index.html":{}}}],["manipulates",{"_index":636,"title":{},"body":{"index.html":{}}}],["manipulation",{"_index":622,"title":{},"body":{"index.html":{}}}],["map",{"_index":157,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["map((posts",{"_index":136,"title":{},"body":{"injectables/Effects.html":{}}}],["mapped",{"_index":656,"title":{},"body":{"index.html":{}}}],["marbles",{"_index":346,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["margin",{"_index":212,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["matches",{"_index":689,"title":{},"body":{"index.html":{}}}],["matching",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":466,"title":{},"body":{"index.html":{}}}],["message",{"_index":658,"title":{},"body":{"index.html":{}}}],["messages",{"_index":446,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/ApiService.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["miscellaneous",{"_index":354,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mixins",{"_index":592,"title":{},"body":{"index.html":{}}}],["mock",{"_index":598,"title":{},"body":{"index.html":{}}}],["mod",{"_index":680,"title":{},"body":{"index.html":{}}}],["models",{"_index":562,"title":{},"body":{"index.html":{}}}],["models/post",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{}}}],["models/store",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/Effects.html":{}}}],["modern",{"_index":607,"title":{},"body":{"index.html":{}}}],["module",{"_index":460,"title":{},"body":{"index.html":{}}}],["modules",{"_index":690,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mostly",{"_index":502,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":684,"title":{},"body":{"index.html":{}}}],["name",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["names",{"_index":683,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":506,"title":{},"body":{"index.html":{}}}],["need",{"_index":476,"title":{},"body":{"index.html":{}}}],["new",{"_index":329,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ng",{"_index":422,"title":{},"body":{"index.html":{}}}],["ngforof",{"_index":275,"title":{},"body":{"components/PostListComponent.html":{}}}],["ngif",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["ngondestroy",{"_index":478,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":278,"title":{},"body":{"components/PostListComponent.html":{},"index.html":{}}}],["ngrx",{"_index":390,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":155,"title":{},"body":{"injectables/Effects.html":{},"dependencies.html":{},"index.html":{}}}],["ngrx/store",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngx",{"_index":156,"title":{},"body":{"injectables/Effects.html":{},"dependencies.html":{},"index.html":{}}}],["node.js",{"_index":426,"title":{},"body":{"index.html":{}}}],["npm",{"_index":404,"title":{},"body":{"index.html":{}}}],["nth",{"_index":234,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["null",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":177,"title":{},"body":{"interfaces/ExtendedPost.html":{},"interfaces/Post.html":{}}}],["numbers",{"_index":549,"title":{},"body":{"index.html":{}}}],["object",{"_index":542,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["object.keys(post).filter((item",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objects",{"_index":567,"title":{},"body":{"index.html":{}}}],["observable",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["observables",{"_index":472,"title":{},"body":{"index.html":{}}}],["of(null",{"_index":152,"title":{},"body":{"injectables/Effects.html":{}}}],["oftype",{"_index":154,"title":{},"body":{"injectables/Effects.html":{}}}],["oftype(fetchposts",{"_index":131,"title":{},"body":{"injectables/Effects.html":{}}}],["oftype(onpostclick",{"_index":114,"title":{},"body":{"injectables/Effects.html":{}}}],["on(onpostclick",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(setextendedpostlist",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(setloading",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(setpreviouspost",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(updateextendedpost",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["once",{"_index":415,"title":{},"body":{"index.html":{}}}],["one",{"_index":376,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":274,"title":{},"body":{"components/PostListComponent.html":{}}}],["onpostclick",{"_index":163,"title":{},"body":{"injectables/Effects.html":{},"components/PostComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["onpostclickaction",{"_index":640,"title":{},"body":{"index.html":{}}}],["onpostclickeffect",{"_index":103,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["operate",{"_index":434,"title":{},"body":{"index.html":{}}}],["operator",{"_index":661,"title":{},"body":{"index.html":{}}}],["operators",{"_index":593,"title":{},"body":{"index.html":{}}}],["optional",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["otherwise",{"_index":517,"title":{},"body":{"index.html":{}}}],["overview",{"_index":691,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":332,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":405,"title":{},"body":{"index.html":{}}}],["padding",{"_index":264,"title":{},"body":{"components/PostComponent.html":{}}}],["paradigm",{"_index":609,"title":{},"body":{"index.html":{}}}],["parameter",{"_index":646,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["parent",{"_index":385,"title":{},"body":{"index.html":{}}}],["passed",{"_index":531,"title":{},"body":{"index.html":{}}}],["passes",{"_index":386,"title":{},"body":{"index.html":{}}}],["path",{"_index":579,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":463,"title":{},"body":{"index.html":{}}}],["please",{"_index":149,"title":{},"body":{"injectables/Effects.html":{}}}],["pointer",{"_index":270,"title":{},"body":{"components/PostComponent.html":{}}}],["position",{"_index":202,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["post",{"_index":32,"title":{"interfaces/Post.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["post'},{'name",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["post.component.scss",{"_index":251,"title":{},"body":{"components/PostComponent.html":{}}}],["post.title",{"_index":126,"title":{},"body":{"injectables/Effects.html":{},"miscellaneous/variables.html":{}}}],["post.ts",{"_index":175,"title":{},"body":{"interfaces/ExtendedPost.html":{},"coverage.html":{}}}],["post/post.component",{"_index":282,"title":{},"body":{"components/PostListComponent.html":{}}}],["post[arrayofpostproperties[post.activestate",{"_index":252,"title":{},"body":{"components/PostComponent.html":{}}}],["postclick",{"_index":253,"title":{},"body":{"components/PostComponent.html":{}}}],["postcomponent",{"_index":96,"title":{"components/PostComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"coverage.html":{}}}],["postlist",{"_index":326,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["postlistcomponent",{"_index":61,"title":{"components/PostListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"coverage.html":{}}}],["posts",{"_index":148,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["posts.map((item",{"_index":139,"title":{},"body":{"injectables/Effects.html":{}}}],["powered",{"_index":389,"title":{},"body":{"index.html":{}}}],["practices",{"_index":413,"title":{},"body":{"index.html":{}}}],["previous",{"_index":638,"title":{},"body":{"index.html":{}}}],["previously",{"_index":379,"title":{},"body":{"index.html":{}}}],["previouspost",{"_index":117,"title":{},"body":{"injectables/Effects.html":{},"interfaces/StoreDTO.html":{},"index.html":{}}}],["previouspost?.id",{"_index":125,"title":{},"body":{"injectables/Effects.html":{}}}],["previouspostreducer",{"_index":320,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["previouspoststate",{"_index":321,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["print",{"_index":664,"title":{},"body":{"index.html":{}}}],["private",{"_index":170,"title":{},"body":{"injectables/Effects.html":{}}}],["problem",{"_index":384,"title":{},"body":{"index.html":{}}}],["production",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":393,"title":{},"body":{"index.html":{}}}],["properties",{"_index":66,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{},"index.html":{},"properties.html":{}}}],["properties.ts",{"_index":310,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":372,"title":{},"body":{"index.html":{}}}],["props",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":493,"title":{},"body":{"index.html":{}}}],["provided",{"_index":398,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{}}}],["purpose",{"_index":433,"title":{},"body":{"index.html":{}}}],["purposes",{"_index":454,"title":{},"body":{"index.html":{}}}],["radius",{"_index":225,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["readonly",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["reasons",{"_index":394,"title":{},"body":{"index.html":{}}}],["received",{"_index":530,"title":{},"body":{"index.html":{}}}],["receives",{"_index":362,"title":{},"body":{"index.html":{}}}],["reduce",{"_index":487,"title":{},"body":{"index.html":{}}}],["reducer",{"_index":639,"title":{},"body":{"index.html":{}}}],["reducers",{"_index":585,"title":{},"body":{"index.html":{}}}],["related",{"_index":534,"title":{},"body":{"index.html":{}}}],["repeat(10",{"_index":289,"title":{},"body":{"components/PostListComponent.html":{}}}],["repeated",{"_index":681,"title":{},"body":{"index.html":{}}}],["request",{"_index":529,"title":{},"body":{"index.html":{}}}],["required",{"_index":420,"title":{},"body":{"index.html":{}}}],["response",{"_index":655,"title":{},"body":{"index.html":{}}}],["results",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"injectables/Effects.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":651,"title":{},"body":{"index.html":{}}}],["returns",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["right",{"_index":210,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"index.html":{}}}],["ring",{"_index":201,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["root",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{}}}],["root'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["rotate(0deg",{"_index":243,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["rotate(360deg",{"_index":245,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["run",{"_index":418,"title":{},"body":{"index.html":{}}}],["running",{"_index":421,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/PostListComponent.html":{},"dependencies.html":{}}}],["safety",{"_index":500,"title":{},"body":{"index.html":{}}}],["scope",{"_index":484,"title":{},"body":{"index.html":{}}}],["scss",{"_index":486,"title":{},"body":{"index.html":{}}}],["select",{"_index":559,"title":{},"body":{"index.html":{}}}],["selectactivepost",{"_index":187,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":515,"title":{},"body":{"index.html":{}}}],["selectextendedpostlist",{"_index":281,"title":{},"body":{"components/PostListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectloading",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["selectors",{"_index":169,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["selectpreviouspost",{"_index":168,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selects",{"_index":553,"title":{},"body":{"index.html":{}}}],["send",{"_index":528,"title":{},"body":{"index.html":{}}}],["separate",{"_index":600,"title":{},"body":{"index.html":{}}}],["serve",{"_index":423,"title":{},"body":{"index.html":{}}}],["service",{"_index":660,"title":{},"body":{"index.html":{}}}],["services",{"_index":576,"title":{},"body":{"index.html":{}}}],["services/api.service",{"_index":162,"title":{},"body":{"injectables/Effects.html":{}}}],["setextendedpostlist",{"_index":144,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setextendedpostseffect",{"_index":104,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["setloading",{"_index":167,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setloadingaction",{"_index":642,"title":{},"body":{"index.html":{}}}],["setpreviouspost",{"_index":165,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":634,"title":{},"body":{"index.html":{}}}],["showing",{"_index":444,"title":{},"body":{"index.html":{}}}],["shown",{"_index":532,"title":{},"body":{"index.html":{}}}],["side",{"_index":508,"title":{},"body":{"index.html":{}}}],["sign",{"_index":626,"title":{},"body":{"index.html":{}}}],["simulate",{"_index":443,"title":{},"body":{"index.html":{}}}],["size",{"_index":267,"title":{},"body":{"components/PostComponent.html":{}}}],["sizing",{"_index":216,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["small",{"_index":360,"title":{},"body":{"index.html":{}}}],["solid",{"_index":222,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/PostListComponent.html":{}}}],["soon",{"_index":514,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{}}}],["spinner",{"_index":196,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"index.html":{}}}],["spinner'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["spinner.component",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["spinner.component.scss",{"_index":198,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":195,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["spinner/loading",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["spread",{"_index":620,"title":{},"body":{"index.html":{}}}],["square",{"_index":371,"title":{},"body":{"index.html":{}}}],["src/.../actions.ts",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../post",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../post.ts",{"_index":356,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../reducers.ts",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../selectors.ts",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:23",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/header/header.component.ts",{"_index":179,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts:23",{"_index":185,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/loading",{"_index":194,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"coverage.html":{}}}],["src/app/components/post",{"_index":271,"title":{},"body":{"components/PostListComponent.html":{},"coverage.html":{}}}],["src/app/components/post/post.component.ts",{"_index":250,"title":{},"body":{"components/PostComponent.html":{},"coverage.html":{}}}],["src/app/components/post/post.component.ts:17",{"_index":256,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/components/post/post.component.ts:18",{"_index":255,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/components/post/post.component.ts:21",{"_index":257,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/constants/post",{"_index":260,"title":{},"body":{"components/PostComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/enums/post.ts",{"_index":357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/extended",{"_index":174,"title":{},"body":{"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"coverage.html":{}}}],["src/app/models/post.ts",{"_index":246,"title":{},"body":{"interfaces/Post.html":{},"coverage.html":{}}}],["src/app/models/store",{"_index":186,"title":{},"body":{"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["src/app/models/store.ts",{"_index":295,"title":{},"body":{"interfaces/StoreDTO.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:11",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:15",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:19",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/store/actions",{"_index":261,"title":{},"body":{"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["src/app/store/actions.ts",{"_index":312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/effects.ts",{"_index":102,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{}}}],["src/app/store/effects.ts:16",{"_index":153,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/store/effects.ts:39",{"_index":130,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/store/effects.ts:59",{"_index":109,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/store/reducers.ts",{"_index":313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors",{"_index":188,"title":{},"body":{"components/HeaderComponent.html":{},"components/PostListComponent.html":{}}}],["src/app/store/selectors.ts",{"_index":322,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/styles/colors",{"_index":199,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/PostListComponent.html":{}}}],["src/app/unit",{"_index":323,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environment/environment",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/environment/environment.ts",{"_index":328,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["started",{"_index":359,"title":{"index.html":{}},"body":{}}],["starting",{"_index":616,"title":{},"body":{"index.html":{}}}],["starts",{"_index":424,"title":{},"body":{"index.html":{}}}],["state",{"_index":391,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["store.activepost",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.extendedpostlist",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.loading",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.previouspost",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.select(selectextendedpostlist",{"_index":284,"title":{},"body":{"components/PostListComponent.html":{}}}],["store.select(selectloading",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["store/selectors",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["stored",{"_index":483,"title":{},"body":{"index.html":{}}}],["storedto",{"_index":81,"title":{"interfaces/StoreDTO.html":{}},"body":{"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stores",{"_index":573,"title":{},"body":{"index.html":{}}}],["streams",{"_index":516,"title":{},"body":{"index.html":{}}}],["string",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Post.html":{},"index.html":{}}}],["structure",{"_index":447,"title":{},"body":{"index.html":{}}}],["styles",{"_index":193,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["styleurls",{"_index":197,"title":{},"body":{"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["styling",{"_index":441,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":471,"title":{},"body":{"index.html":{}}}],["subscription",{"_index":480,"title":{},"body":{"index.html":{}}}],["success",{"_index":657,"title":{},"body":{"index.html":{}}}],["successfully",{"_index":142,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["such",{"_index":591,"title":{},"body":{"index.html":{}}}],["switched",{"_index":653,"title":{},"body":{"index.html":{}}}],["switchmap",{"_index":134,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["table",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":645,"title":{},"body":{"index.html":{}}}],["tap",{"_index":132,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["tap(([currentpostaction",{"_index":116,"title":{},"body":{"injectables/Effects.html":{}}}],["target",{"_index":558,"title":{},"body":{"index.html":{}}}],["template",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["templates",{"_index":482,"title":{},"body":{"index.html":{}}}],["test",{"_index":601,"title":{},"body":{"index.html":{}}}],["test/post",{"_index":324,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/post.ts",{"_index":327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["testing",{"_index":442,"title":{},"body":{"index.html":{}}}],["tests",{"_index":597,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":652,"title":{},"body":{"index.html":{}}}],["this.actions$.pipe",{"_index":113,"title":{},"body":{"injectables/Effects.html":{}}}],["this.apiservice.getposts().pipe",{"_index":135,"title":{},"body":{"injectables/Effects.html":{}}}],["this.getactivepost",{"_index":189,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.getextendedposts",{"_index":283,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.http.get(`${this.baseurl}/posts",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.loading",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this.post",{"_index":263,"title":{},"body":{"components/PostComponent.html":{}}}],["this.store.dispatch(fetchposts",{"_index":285,"title":{},"body":{"components/PostListComponent.html":{}}}],["this.store.dispatch(onpostclick",{"_index":262,"title":{},"body":{"components/PostComponent.html":{}}}],["this.store.dispatch(setloading",{"_index":133,"title":{},"body":{"injectables/Effects.html":{}}}],["this.store.dispatch(setpreviouspost(currentpostaction",{"_index":127,"title":{},"body":{"injectables/Effects.html":{}}}],["this.store.dispatch(updateextendedpost",{"_index":118,"title":{},"body":{"injectables/Effects.html":{}}}],["this.store.select(selectactivepost",{"_index":190,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.toastr.error('failed",{"_index":146,"title":{},"body":{"injectables/Effects.html":{}}}],["this.toastr.success('posts",{"_index":141,"title":{},"body":{"injectables/Effects.html":{}}}],["those",{"_index":435,"title":{},"body":{"index.html":{}}}],["three",{"_index":563,"title":{},"body":{"index.html":{}}}],["throughout",{"_index":497,"title":{},"body":{"index.html":{}}}],["time",{"_index":438,"title":{},"body":{"index.html":{}}}],["title",{"_index":248,"title":{},"body":{"interfaces/Post.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toast",{"_index":445,"title":{},"body":{"index.html":{}}}],["toastr",{"_index":107,"title":{},"body":{"injectables/Effects.html":{},"dependencies.html":{},"index.html":{}}}],["toastrservice",{"_index":108,"title":{},"body":{"injectables/Effects.html":{}}}],["toggle",{"_index":554,"title":{},"body":{"index.html":{}}}],["toggling",{"_index":524,"title":{},"body":{"index.html":{}}}],["top",{"_index":207,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["transform",{"_index":242,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["transparent",{"_index":233,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["tree",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["triggered",{"_index":643,"title":{},"body":{"index.html":{}}}],["true",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/Effects.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"index.html":{}}}],["try",{"_index":150,"title":{},"body":{"injectables/Effects.html":{}}}],["ts",{"_index":485,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["turns",{"_index":381,"title":{},"body":{"index.html":{}}}],["type",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/Effects.html":{},"interfaces/ExtendedPost.html":{},"components/HeaderComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{},"interfaces/StoreDTO.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":495,"title":{},"body":{"index.html":{}}}],["under",{"_index":564,"title":{},"body":{"index.html":{}}}],["unit",{"_index":596,"title":{},"body":{"index.html":{}}}],["unnecessary",{"_index":488,"title":{},"body":{"index.html":{}}}],["unsubscribing",{"_index":477,"title":{},"body":{"index.html":{}}}],["until",{"_index":650,"title":{},"body":{"index.html":{}}}],["unused",{"_index":470,"title":{},"body":{"index.html":{}}}],["up",{"_index":436,"title":{},"body":{"index.html":{}}}],["update",{"_index":617,"title":{},"body":{"index.html":{}}}],["updateextendedpost",{"_index":166,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["updates",{"_index":533,"title":{},"body":{"index.html":{}}}],["usage",{"_index":504,"title":{},"body":{"index.html":{}}}],["use",{"_index":461,"title":{},"body":{"index.html":{}}}],["used",{"_index":412,"title":{},"body":{"index.html":{}}}],["userid",{"_index":249,"title":{},"body":{"interfaces/Post.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":401,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":407,"title":{},"body":{"index.html":{}}}],["value",{"_index":111,"title":{},"body":{"injectables/Effects.html":{},"components/PostComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":474,"title":{},"body":{"index.html":{}}}],["var",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingSpinnerComponent.html":{},"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["variable",{"_index":311,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":587,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["ver",{"_index":440,"title":{},"body":{"index.html":{}}}],["version",{"_index":606,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versions",{"_index":403,"title":{},"body":{"index.html":{}}}],["via",{"_index":543,"title":{},"body":{"index.html":{}}}],["void",{"_index":258,"title":{},"body":{"components/PostComponent.html":{},"components/PostListComponent.html":{}}}],["wait",{"_index":649,"title":{},"body":{"index.html":{}}}],["whole",{"_index":631,"title":{},"body":{"index.html":{}}}],["width",{"_index":204,"title":{},"body":{"components/LoadingSpinnerComponent.html":{}}}],["within",{"_index":671,"title":{},"body":{"index.html":{}}}],["withlatestfrom",{"_index":158,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["withlatestfrom(this.store.select(selectpreviouspost",{"_index":115,"title":{},"body":{"injectables/Effects.html":{}}}],["without",{"_index":665,"title":{},"body":{"index.html":{}}}],["worrying",{"_index":458,"title":{},"body":{"index.html":{}}}],["x",{"_index":367,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":352,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPosts\n                        \n                    \n                \n            \n            \n                \ngetPosts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseUrl\n                    \n                \n\n                \n                    \n                        getbaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/api.service.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environment/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Post } from '../models/post';\nimport { delay } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  constructor(private readonly http: HttpClient) { }\n\n  get baseUrl(): string {\n    return environment.apiUrl;\n  }\n\n  getPosts() {\n    return this.http.get(`${this.baseUrl}/posts`)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeaderComponent\n                                PostListComponent\n                                LoadingSpinnerComponent\n                            AsyncPipe\n                            NgIf\n                \n            \n\n\n\n            \n                template\n                \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, NgIf } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LoadingSpinnerComponent } from './components/loading-spinner/loading-spinner.component';\nimport { PostListComponent } from './components/post-list/post-list.component';\nimport { StoreDTO } from './models/store';\nimport { selectLoading } from './store/selectors';\n\n@Component({\n  standalone: true,\n  imports: [HeaderComponent, PostListComponent, LoadingSpinnerComponent, AsyncPipe, NgIf],\n  selector: 'app-root',\n  template: `\n  \n  \n  \n  `,\n})\n\nexport class AppComponent {\n  loading$: Observable;\n  constructor(private readonly store: Store) {\n    this.loading$ = store.select(selectLoading);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PostListComponent', 'selector': 'app-post-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects.html":{"url":"injectables/Effects.html","title":"injectable - Effects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onPostClickEffect\n                            \n                            \n                                setExtendedPostsEffect\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store: Store, apiService: ApiService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        onPostClickEffect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n        ofType(onPostClick),\n        withLatestFrom(this.store.select(selectPreviousPost)),\n        tap(([currentPostAction, previousPost]) => {\n            this.store.dispatch(updateExtendedPost({\n                value: {\n                    ...currentPostAction.value,\n                    activeState: (currentPostAction.value.activeState + 1) % arrayOfPostProperties.length\n                }\n            }));\n            if (currentPostAction.value.id !== previousPost?.id) {\n                this.store.dispatch(updateExtendedPost({\n                    value: {\n                        ...previousPost,\n                        activeState: Post.title\n                    }\n                }));\n                this.store.dispatch(setPreviousPost(currentPostAction));\n            }\n        })\n    ), { dispatch: false })\n                    \n                \n                    \n                        \n                                Defined in src/app/store/effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExtendedPostsEffect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n        ofType(fetchPosts),\n        tap(() => {\n            this.store.dispatch(setLoading({ value: true }))\n        }),\n        switchMap(() => this.apiService.getPosts().pipe(\n            map((posts) => {\n                const extendedPostItems = posts.map((item, index) => {\n                    return { ...item, activeState: Post.title, index };\n                });\n                this.toastr.success('Posts are successfully fetched!');\n                return setExtendedPostList({ value: extendedPostItems });\n            }),\n            catchError(() => {\n                this.toastr.error('Failed to fetch posts. Please try again!');\n                return of(null);\n            }),\n            tap(() => {\n                this.store.dispatch(setLoading({ value: false }))\n            })\n        )),\n    ))\n                    \n                \n                    \n                        \n                                Defined in src/app/store/effects.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Store } from \"@ngrx/store\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { catchError, map, of, switchMap, tap, withLatestFrom } from \"rxjs\";\nimport { arrayOfPostProperties } from \"../constants/post-properties\";\nimport { Post } from \"../enums/post\";\nimport { StoreDTO } from \"../models/store\";\nimport { ApiService } from \"../services/api.service\";\nimport { onPostClick, setExtendedPostList, fetchPosts, setPreviousPost, updateExtendedPost, setLoading } from \"./actions\";\nimport { selectPreviousPost } from \"./selectors\";\n\n@Injectable()\nexport class Effects {\n\n    setExtendedPostsEffect = createEffect(() => this.actions$.pipe(\n        ofType(fetchPosts),\n        tap(() => {\n            this.store.dispatch(setLoading({ value: true }))\n        }),\n        switchMap(() => this.apiService.getPosts().pipe(\n            map((posts) => {\n                const extendedPostItems = posts.map((item, index) => {\n                    return { ...item, activeState: Post.title, index };\n                });\n                this.toastr.success('Posts are successfully fetched!');\n                return setExtendedPostList({ value: extendedPostItems });\n            }),\n            catchError(() => {\n                this.toastr.error('Failed to fetch posts. Please try again!');\n                return of(null);\n            }),\n            tap(() => {\n                this.store.dispatch(setLoading({ value: false }))\n            })\n        )),\n    ))\n\n    onPostClickEffect = createEffect(() => this.actions$.pipe(\n        ofType(onPostClick),\n        withLatestFrom(this.store.select(selectPreviousPost)),\n        tap(([currentPostAction, previousPost]) => {\n            this.store.dispatch(updateExtendedPost({\n                value: {\n                    ...currentPostAction.value,\n                    activeState: (currentPostAction.value.activeState + 1) % arrayOfPostProperties.length\n                }\n            }));\n            if (currentPostAction.value.id !== previousPost?.id) {\n                this.store.dispatch(updateExtendedPost({\n                    value: {\n                        ...previousPost,\n                        activeState: Post.title\n                    }\n                }));\n                this.store.dispatch(setPreviousPost(currentPostAction));\n            }\n        })\n    ), { dispatch: false })\n\n    constructor(\n        private readonly actions$: Actions,\n        private readonly store: Store,\n        private readonly apiService: ApiService,\n        private readonly toastr: ToastrService) { }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedPost.html":{"url":"interfaces/ExtendedPost.html","title":"interface - ExtendedPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtendedPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/extended-post.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Post\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeState\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeState:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Post } from \"./post\";\n\nexport interface ExtendedPost extends Post {\n    activeState: number;\n    index:number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                            AsyncPipe\n                \n            \n\n\n\n            \n                template\n                  \n  \n    Post Management\n    Active post id:&nbsp;{{lastPost.id}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getActivePost$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/header.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getActivePost$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, NgIf } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ExtendedPost } from 'src/app/models/extended-post';\nimport { StoreDTO } from 'src/app/models/store';\nimport { selectActivePost } from 'src/app/store/selectors';\n\n@Component({\n  standalone: true,\n  imports: [NgIf, AsyncPipe],\n  selector: 'app-header',\n  template: `\n  \n  \n    Post Management\n    Active post id:&nbsp;{{lastPost.id}}\n  \n\n`})\nexport class HeaderComponent {\n\n  getActivePost$: Observable;\n\n  constructor(private readonly store: Store) {\n    this.getActivePost$ = this.store.select(selectActivePost);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Post Management    Active post id: {{lastPost.id}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PostListComponent', 'selector': 'app-post-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingSpinnerComponent.html":{"url":"components/LoadingSpinnerComponent.html","title":"component - LoadingSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loading-spinner/loading-spinner.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading-spinner\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./loading-spinner.component.scss\n            \n\n\n            \n                template\n                  \n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'app-loading-spinner',\n  template: `\n    \n    \n    \n    \n    \n  \n  `,\n  styleUrls: ['./loading-spinner.component.scss']\n})\nexport class LoadingSpinnerComponent {}\n\n    \n\n\n    \n                \n                    ./loading-spinner.component.scss\n                \n                @import '/src/app/styles/colors';\n\n.lds-ring {\n    position: absolute;\n    width: 64px;\n    height: 64px;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    margin: auto;\n    div {\n        box-sizing: border-box;\n        display: block;\n        position: absolute;\n        width: 51px;\n        height: 51px;\n        margin: 6px;\n        border: 6px solid $indigo-color;\n        border-radius: 50%;\n        animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n        border-color: $indigo-color transparent transparent transparent;\n        &:nth-child(1) {\n            animation-delay: -0.45s;\n        }\n        &:nth-child(2) {\n            animation-delay: -0.3s;\n        }\n        &:nth-child(3) {\n            animation-delay: -0.15s;\n        }\n    }\n}\n@keyframes lds-ring {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PostListComponent', 'selector': 'app-post-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Post.html":{"url":"interfaces/Post.html","title":"interface - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n    userId: number,\n    id: number,\n    title: string,\n    body: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/post/post.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./post.component.scss\n            \n\n\n            \n                template\n                {{post[arrayOfPostProperties[post.activeState]]}}\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                arrayOfPostProperties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/post/post.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        post\n                    \n                \n                \n                    \n                        Type :         ExtendedPost\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/post/post.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        postClick\n                        \n                    \n                \n            \n            \n                \npostClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/post/post.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        arrayOfPostProperties\n                        \n                    \n                \n            \n                \n                    \n                        Default value : arrayOfPostProperties\n                    \n                \n                    \n                        \n                                Defined in src/app/components/post/post.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { arrayOfPostProperties } from 'src/app/constants/post-properties';\nimport { ExtendedPost } from 'src/app/models/extended-post';\nimport { StoreDTO } from 'src/app/models/store';\nimport { onPostClick } from 'src/app/store/actions';\n\n@Component({\n  standalone: true,\n  selector: 'app-post',\n  template: `{{post[arrayOfPostProperties[post.activeState]]}}`,\n  styleUrls: ['./post.component.scss']\n})\n\nexport class PostComponent {\n\n  @Input() post: ExtendedPost;\n  readonly arrayOfPostProperties = arrayOfPostProperties;\n  constructor(private readonly store: Store) { }\n\n  postClick() {\n    this.store.dispatch(onPostClick({ value: this.post }));\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./post.component.scss\n                \n                a {\n    height: 100%;\n    display: block;\n    padding: 10px;\n    font-size: 12px;\n    cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{post[arrayOfPostProperties[post.activeState]]}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PostListComponent', 'selector': 'app-post-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostListComponent.html":{"url":"components/PostListComponent.html","title":"component - PostListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/post-list/post-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            NgIf\n                            NgForOf\n                                PostComponent\n                \n            \n\n            \n                styleUrls\n                ./post-list.component.scss\n            \n\n\n            \n                template\n                  \n    \n      \n    \n  \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getExtendedPosts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/post-list/post-list.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/post-list/post-list.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getExtendedPosts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/post-list/post-list.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, NgForOf, NgIf } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ExtendedPost } from 'src/app/models/extended-post';\nimport { StoreDTO } from 'src/app/models/store';\nimport { fetchPosts } from 'src/app/store/actions';\nimport { selectExtendedPostList } from 'src/app/store/selectors';\nimport { PostComponent } from '../post/post.component';\n\n@Component({\n  standalone: true,\n  imports: [AsyncPipe, NgIf, NgForOf, PostComponent],\n  selector: 'app-post-list',\n  template: `\n  \n    \n      \n    \n  \n`,\n  styleUrls: ['./post-list.component.scss']\n})\nexport class PostListComponent implements OnInit {\n\n  getExtendedPosts$: Observable;\n\n  constructor(private readonly store: Store) {\n    this.getExtendedPosts$ = store.select(selectExtendedPostList);\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(fetchPosts());\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./post-list.component.scss\n                \n                @import '/src/app/styles/colors';\n\n.grid-container {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n\n.grid-item {\n  background-color: $light-gray-color;\n  border: 1px solid $gray-color;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoadingSpinnerComponent', 'selector': 'app-loading-spinner'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PostListComponent', 'selector': 'app-post-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoreDTO.html":{"url":"interfaces/StoreDTO.html","title":"interface - StoreDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoreDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/store.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activePost\n                                        \n                                \n                                \n                                        \n                                            extendedPostList\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            previousPost\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activePost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activePost:         ExtendedPost\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtendedPost\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extendedPostList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extendedPostList:         ExtendedPost[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtendedPost[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previousPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previousPost:         ExtendedPost\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtendedPost\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExtendedPost } from \"./extended-post\";\n\nexport interface StoreDTO {\n    extendedPostList: ExtendedPost[];\n    previousPost: ExtendedPost;\n    activePost:ExtendedPost;\n    loading:boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/loading-spinner/loading-spinner.component.ts\n            \n            component\n            LoadingSpinnerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/post-list/post-list.component.ts\n            \n            component\n            PostListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/post/post.component.ts\n            \n            component\n            PostComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/constants/post-properties.ts\n            \n            variable\n            arrayOfPostProperties\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/extended-post.ts\n            \n            interface\n            ExtendedPost\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/post.ts\n            \n            interface\n            Post\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/store.ts\n            \n            interface\n            StoreDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/actions.ts\n            \n            variable\n            fetchPosts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/actions.ts\n            \n            variable\n            onPostClick\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/actions.ts\n            \n            variable\n            setExtendedPostList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/actions.ts\n            \n            variable\n            setLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/actions.ts\n            \n            variable\n            setPreviousPost\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/actions.ts\n            \n            variable\n            updateExtendedPost\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/effects.ts\n            \n            injectable\n            Effects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/reducers.ts\n            \n            variable\n            activePostReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers.ts\n            \n            variable\n            activePostState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers.ts\n            \n            variable\n            extendedPostListReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers.ts\n            \n            variable\n            extendedPostListState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers.ts\n            \n            variable\n            loadingReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers.ts\n            \n            variable\n            loadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers.ts\n            \n            variable\n            previousPostReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers.ts\n            \n            variable\n            previousPostState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors.ts\n            \n            variable\n            selectActivePost\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors.ts\n            \n            variable\n            selectExtendedPostList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors.ts\n            \n            variable\n            selectLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors.ts\n            \n            variable\n            selectPreviousPost\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/unit-test/post-list.ts\n            \n            variable\n            postList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/unit-test/post.ts\n            \n            variable\n            post\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environment/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.6\n        \n            @angular/common : ^17.3.6\n        \n            @angular/compiler : ^17.3.6\n        \n            @angular/core : ^17.3.6\n        \n            @angular/forms : ^17.3.6\n        \n            @angular/platform-browser : ^17.3.6\n        \n            @angular/platform-browser-dynamic : ^17.3.6\n        \n            @angular/router : ^17.3.6\n        \n            @ngrx/effects : ^17.2.0\n        \n            @ngrx/store : ^17.2.0\n        \n            bootstrap : ^5.3.3\n        \n            jasmine-marbles : ^0.9.2\n        \n            ngx-toastr : ^18.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Post   (src/.../post.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/enums/post.ts\n    \n        \n            \n                \n                    \n                        \n                        Post\n                    \n                \n                        \n                            \n                                 userId\n                            \n                        \n                        \n                            \n                                 id\n                            \n                        \n                        \n                            \n                                 title\n                            \n                        \n                        \n                            \n                                 body\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPost Management\nPost Management is a small application that receives 100 posts from the jsonplaceholder API and displays them in a 10 x 10 grid with 100 boxes.\nEach post has the following properties: userId, id, title, and body. By default, each square in the grid displays the 'title' property. However, clicking on posts changes the displayed property one by one.\nIf the displayed property of a post changes and clicking on another box attempted previously, the changed displayed property of the post turns back to the default 'title' property.\nTo approach this problem, a parent component receives a list of posts and passes each post instance to a child component, which is powered by ngRx for state management.\nDetails of this project and the reasons for choosing the listed approaches are provided.\nProject Construction\nThe project has been constructed using the latest versions of npm packages and Angular utilities [Based on Angular 17], following best, commonly used practices.\nInstallation\nOnce the project is cloned, it is only enough to run npm install to install the required npm packages. Then, running ng serve starts running the project.\n[Assuming Node.js and Angular CLI are already installed.]\nList of Added NPM Packages\nBelow you will find a list of npm packages installed in the project with the versions and purpose to be able to operate some actions in the project. [All those are up-to-date in the date and time they have been initialized].\n\n@ngrx/effects and @ngrx/store [ver 17.2.0] - For state management.\nbootstrap [ver 5.3.3] - For styling.\njasmine-marbles - For testing ngrx effects to simulate actions.\nngx-toastr [ver 18.0.0] - For showing toast messages.\n\nProject Structure\nFolders\n![IMG]\n\nComponents:\n\n\n\nFour components have been generated apart from the app component to serve general purposes. A standalone approach was followed for creating components to avoid worrying about any kind of module and dependencies to the module.\nTo use built-in directives, pipes, and other utilities in Angular instead of CommonModule, each member of this module has been imported individually to avoid including unused imports from CommonModule.\nAsyncPipe has been used in the template to subscribe to observables and consume their values, avoiding the need for unsubscribing in ngOnDestroy with an extra added Subscription value attached to it.\nHTML templates are stored in the template property of the component scope in .ts file for components that do not need SCSS to reduce unnecessary crowding.\nComponents' injections are made with the readonly keyword in the constructor to provide immutability.\nTypes are used extensively throughout the codebase to ensure type safety.\nConstructors are mostly used for the assignments of store observables to avoid unnecessary imports and usage of ngOnInit hook.\n\n\nHeader: \n\nBootstrap navbar has been used with a black background. On the left side, 'Post Management' is hardcoded as the name of the app. On the right side, the currently clicked post appears with its id conditionally. As soon as a box is clicked, the observable of selected store streams the clicked post instance. Otherwise, it's empty.\n\n![IMG]\n\nLoading Spinner: \n\nA custom loading spinner is used to give the idea that posts are loading. The activity of toggling is managed in the state and used in the app component.\n\n![IMG]\n\nPost List: \n\nA list of 100 posts is fetched with the dispatched 'fetchPosts' action from the actions to send a request to the API. Once posts are received from the getExtendedPosts$ observable, they are passed to the app-post component to be shown in the grid one by one. PostList component updates related child app-post components correctly with the help of actions. Display grid is used to manage the 10 x 10 layout.\n\n![IMG]\n\nPost: \n\nComponent post manages click to the post and dispatches the action onPostClick with the clicked post object passed via input property from the post list component. An array called arrayOfPostProperties is extracted from a Post enum to access each property of the post with numbers.\n\n![IMG]\n\nApp Component: \n\nApp component holds always active components in the lifetime of the application, including header, post-list, and loading-spinner components. App component selects selectLoading from store to be able to subscribe to the changes of loading toggle activity.\n\n![IMG]\n\n\n\nEnums: \n\nOnly one exported enum is used and stored in the folder enums to target properties of the object 'Post' with the numbers to select with the corresponding indexes matching in the properties array.\n\n\nModels: \n\nThree exported interfaces are used and stored under the models directory to assign the type of objects, arrays, etc. Post is the interface based on the object that we are fetching posts from the API. ExtendedPost is an interface that extends Post with additional activeState and index. StoreDTO is a general definition of how stores look like to avoid duplicating types.\n\n\nServices: \n\nOnly one ApiService is used in the entire application to fetch posts from the API. A getter baseUrl is used to access the jsonplaceholder API path inside the function getPosts to fetch a list of posts using get from HttpClient as an observable.\n\n\nStore: \n\nThe store folder mainly includes everything related to store for state management, including actions, effects, reducers, and selectors, combined in a folder.\n\n\nStyles: \n\nFor commonly used SCSS variables, _colors.scss is created. If the application were bigger, other utilities such as mixins, operators, functions, etc., would be included.\n\n\nUnit-tests: \n\nMock datasets are stored in separate folders to be imported into unit test files.\n\n\nEnvironment: \n\nFolder environment holds the file environment.ts, which includes the apiUrl where jsonplaceholder API is stored as a string to be accessed from ApiService.\n\n\n\nState Management\n![IMG]\n\nThe latest version of ngRx has been used in this project with the modern functional paradigm (createReducer, createAction, createEffect, etc.).\nThere are 4 reducers used and defined in the store in main.ts.\nFlow will be explained starting from actions since they are used in reducers to update the state or create side effects using effects when dispatched.\nImmutability is crucial in state management; spread operators are used most of the time to clone and return a new state with manipulation.\nAll variables holding an observable include a '$' dollar sign at the end of the variable name to adhere to the common convention.\n\nReducers\nextendedPostListReducer:\n\nManages the whole posts state by defining extendedPostList with attached activeState and index properties. \nAttached setExtendedPostList directly sets the received list of extended posts to the state, updateExtendedPost updates any received post object with a received index and activeProperty to update extendedPostListState.\n\n![IMG]\npreviousPostReducer:\n\nStores and manipulates the previously manipulated active property of the post. \nThe previous post reducer should be stored in the state and manipulated with the setPreviousPost attached to the previousPostState.\n\n![IMG]\nactivePostReducer:\n\nStores the active post of any box on each click. \nThe currently clicked post should be stored in the activePostState to be manipulated on each dispatched onPostClickAction.\n\n![IMG]\nloadingReducer:\n\nManages the activity of loading toggle. \nloadingReducer is used to manipulate loadingState with the dispatched setLoadingAction.\n\n![IMG]\nActions\nfetchPosts:\n\nAn action triggered in the setExtendedPostsEffect to send a request to the API to fetch posts and create a side effect.\n\n![IMG]\nsetExtendedPostList:\n\nSets the list of extended posts once posts are fetched from the API. \nTakes a list of ExtendedPost as a parameter.\n\n![IMG]\nupdateExtendedPost:\n\nManipulates any ExtendedPost with a changed title. \nTakes an ExtendedPost object as a parameter.\n\n![IMG]\nonPostClick:\n\nSets any ExtendedPost on each click. \nTakes an ExtendedPost object as a parameter.\n\n![IMG]\nsetPreviousPost:\n\nSets the previous post to be dispatched in the onPostClickEffect once the actively clicked box has changed.\n\n![IMG]\nsetLoading:\n\nSets loadingState with the value true or false attached to loadingReducer.\n\n![IMG]\nEffects\n![IMG]\nsetExtendedPostsEffect:\n\nOnce the action fetchPosts is dispatched, the loading toggle is activated with the dispatched setLoading to wait until the API has returned successfully.\nThanks to switchMap, the observable from apiService is switched to subscribe to fetch the list of posts.\nOnce the observable has been completed, the response of posts array is mapped to return extendedPostItems with attached activeState and index. A success message is displayed by calling success from the toastr service. In the end of the map operator, setExtendedPostList is returned to be dispatched with extendedPostItems array.\nError handling is provided using catchError to print error messages via toastr without breaking observable chains.\nEither response ended successfully or failed to inactive loading toggle, setLoading action is dispatched within the tap operator.\n\n![IMG]\nonPostClickEffect:\n\nOnce onPostClick is dispatched, the previousPost state from store is selected with withLatestFrom operator to be compared with clickedPost action.\nWith destruction applied in the tap operator to be able to get the values of previous and active post objects. Since clicking a box always should change the displayed property, action updateExtendedPost should always be dispatched with the manipulated activeState value.\nThe manipulation of activeState is basically incremented by one and calculated the mod of 4. So it would always be repeated from 0 to 3 one by one. Using these numbers, property names can be accessed with the corresponding index correctly.\nOn each mouse click, it should be checked if a new post is being clicked. In case it does, the activeState property of the previously stored post should change to title as a default.\nTo be able to change the previousPost, the action setPreviousPost should be dispatched if the condition matches.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            activePostReducer   (src/.../reducers.ts)\n                        \n                        \n                            activePostState   (src/.../reducers.ts)\n                        \n                        \n                            arrayOfPostProperties   (src/.../post-properties.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            extendedPostListReducer   (src/.../reducers.ts)\n                        \n                        \n                            extendedPostListState   (src/.../reducers.ts)\n                        \n                        \n                            fetchPosts   (src/.../actions.ts)\n                        \n                        \n                            loadingReducer   (src/.../reducers.ts)\n                        \n                        \n                            loadingState   (src/.../reducers.ts)\n                        \n                        \n                            onPostClick   (src/.../actions.ts)\n                        \n                        \n                            post   (src/.../post.ts)\n                        \n                        \n                            postList   (src/.../post-list.ts)\n                        \n                        \n                            previousPostReducer   (src/.../reducers.ts)\n                        \n                        \n                            previousPostState   (src/.../reducers.ts)\n                        \n                        \n                            selectActivePost   (src/.../selectors.ts)\n                        \n                        \n                            selectExtendedPostList   (src/.../selectors.ts)\n                        \n                        \n                            selectLoading   (src/.../selectors.ts)\n                        \n                        \n                            selectPreviousPost   (src/.../selectors.ts)\n                        \n                        \n                            setExtendedPostList   (src/.../actions.ts)\n                        \n                        \n                            setLoading   (src/.../actions.ts)\n                        \n                        \n                            setPreviousPost   (src/.../actions.ts)\n                        \n                        \n                            updateExtendedPost   (src/.../actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/reducers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        activePostReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n    activePostState,\n    on(onPostClick, (_, action) => action.value),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activePostState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtendedPost\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extendedPostListReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n    extendedPostListState,\n    on(setExtendedPostList, (_, action) => action.value),\n    on(updateExtendedPost, (state, action) => {\n        const clonedState = [...state];\n        clonedState[action.value.index] = action.value;\n        return clonedState;\n    })\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extendedPostListState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtendedPost[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n    loadingState,\n    on(setLoading, (_, action) => action.value)\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousPostReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n    previousPostState,\n    on(setPreviousPost, (_, action) => action.value),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousPostState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtendedPost\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n\n\n        \n    \n\n    src/app/constants/post-properties.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        arrayOfPostProperties\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(Post).filter((item) => isNaN(Number(item)))\n                    \n                \n\n\n        \n    \n\n    src/environment/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrl: 'https://jsonplaceholder.typicode.com'\n  }\n                    \n                \n\n\n        \n    \n\n    src/app/store/actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fetchPosts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    '[PostList] FetchPosts'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPostClick\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    '[PostList] OnPostClick',\n    props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExtendedPostList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    '[PostList] SetExtendedPostList',\n    props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    '[Loading] SetLoading',\n    props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPreviousPost\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    '[PostList] SetPreviousPost',\n    props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateExtendedPost\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    '[PostList] UpdateExtendedPost',\n    props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/unit-test/post.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    userId: 12,\n    id: 1,\n    title: 'dummy-title',\n    body: 'dummy-body',\n    activeState: Post.title,\n    index: 0\n}\n                    \n                \n\n\n        \n    \n\n    src/app/unit-test/post-list.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        postList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [post]\n                    \n                \n\n\n        \n    \n\n    src/app/store/selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectActivePost\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (store: StoreDTO) => store.activePost\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectExtendedPostList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (store: StoreDTO) => store.extendedPostList\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (store: StoreDTO) => store.loading\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectPreviousPost\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (store: StoreDTO) => store.previousPost\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
